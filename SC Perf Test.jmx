<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SC Perf Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SpaceCraft Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">3</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Global header" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiUk9MRV9ERVNJR05FUiIsIm9wZW4iOmZhbHNlLCJ1c2VybmFtZSI6InlvZ2kuZHBAaG9tZWxhbmUuY29tIiwic3ViIjoieW9naS5kcEBob21lbGFuZS5jb20iLCJpYXQiOjE1NzgwMjYzMDEsImV4cCI6MTU3ODExMjcwMX0.jLGhrfiVvJGnIArl9yrzeOabO2NvlzDm1H0iBeaYiSeGn3ig46Edn77FGh1vbSxqHxi5_prmjUm2533fB76Awg</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Token For Designer" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;username&quot;:&quot;roster-designer&quot;,&#xd;
&quot;password&quot;:&quot;u2edy28-g88tg827g-8g283gd83&quot;,&#xd;
&quot;email&quot;:&quot;yogi.dp@homelane.com&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/security/getTokenForDesigner</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Project" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{ &#xd;
   &quot;customer&quot;:{ &#xd;
      &quot;email&quot;:&quot;jmetertest@mailinator.com&quot;,&#xd;
      &quot;mobile&quot;:&quot;1234569345&quot;,&#xd;
      &quot;name&quot;:&quot;Perf Test&quot;,&#xd;
      &quot;title&quot;:&quot;&quot;,&#xd;
      &quot;userId&quot;:&quot;496070&quot;,&#xd;
      &quot;customerId&quot;:&quot;Ben-P-3000010722&quot;&#xd;
   },&#xd;
   &quot;dp&quot;:{ &#xd;
      &quot;email&quot;:&quot;yogi.dp@homelane.com&quot;,&#xd;
      &quot;mobile&quot;:&quot;&quot;,&#xd;
      &quot;name&quot;:&quot;Yogi DP&quot;&#xd;
   },&#xd;
   &quot;opportunity&quot;:{ &#xd;
      &quot;isSCVMEnabled&quot;:false,&#xd;
      &quot;appointmentTime&quot;:null,&#xd;
      &quot;id&quot;:&quot;0982123476&quot;,&#xd;
      &quot;leadId&quot;:&quot;&quot;,&#xd;
      &quot;showRoomId&quot;:&quot;753&quot;,&#xd;
      &quot;showRoomName&quot;:&quot;Test Showroom&quot;&#xd;
   },&#xd;
   &quot;property&quot;:{ &#xd;
      &quot;builder&quot;:null,&#xd;
      &quot;cityCode&quot;:&quot;bengaluru&quot;,&#xd;
      &quot;floorPlanSize&quot;:&quot;2309&quot;,&#xd;
      &quot;installationCity&quot;:&quot;bengaluru&quot;,&#xd;
      &quot;propertyConfig&quot;:&quot;1 BHK&quot;,&#xd;
      &quot;propertyMoveInDate&quot;:&quot;2020-03-12&quot;,&#xd;
      &quot;propertyName&quot;:&quot;Prestige Group&quot;,&#xd;
      &quot;residentialCity&quot;:&quot;bengaluru&quot;&#xd;
   },&#xd;
	&quot;isSCVMEnabled&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.projectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import net.minidev.json.JSONArray;
import net.minidev.json.JSONObject;
import net.minidev.json.parser.JSONParser;
import org.apache.commons.lang.StringUtils;

JSONParser parser = new JSONParser(JSONParser.MODE_JSON_SIMPLE);
JSONObject response = (JSONObject) parser.parse(data);
String projectId = response.getAsString(&quot;projectId&quot;);
log.info(&quot;data: &quot; + projectId);

//Dumping into CSV
f = new FileOutputStream(&quot;D:/user_details.csv&quot;, true);
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(&quot;ProjectId&quot; + &quot;,&quot; + projectId);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get SC Access Token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${id}&quot;,&#xd;
  &quot;token&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/security/getSpacecraftAccessTokenForDesigner</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">projectToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Floor 1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;modelData&quot;:{&quot;units&quot;:&quot;feet&quot;,&quot;unitsAbbreviation&quot;:&quot;ft&quot;,&quot;unitsConversionFactor&quot;:0.0656168,&quot;gridSize&quot;:15.239999512320015,&quot;wallThickness&quot;:5,&quot;preferences&quot;:{&quot;showWallGuidelines&quot;:true,&quot;showWallLengths&quot;:true,&quot;showWallAngles&quot;:false,&quot;showOnlySmallWallAngles&quot;:false,&quot;showGrid&quot;:true,&quot;gridSnap&quot;:false,&quot;showRoomName&quot;:false,&quot;isGuidedDragging&quot;:true}},&quot;name&quot;:&quot;Floor 1&quot;,&quot;canvasRotationAngle&quot;:0,&quot;className&quot;:&quot;GraphLinksModel&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">floorid1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Living Room" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;floor&quot;: {&#xd;
    &quot;modelData&quot;: {&#xd;
      &quot;units&quot;: &quot;feet&quot;,&#xd;
      &quot;unitsAbbreviation&quot;: &quot;ft&quot;,&#xd;
      &quot;unitsConversionFactor&quot;: 0.0656168,&#xd;
      &quot;gridSize&quot;: 15.239999512320015,&#xd;
      &quot;wallThickness&quot;: 5,&#xd;
      &quot;preferences&quot;: {&#xd;
        &quot;showWallGuidelines&quot;: true,&#xd;
        &quot;showWallLengths&quot;: true,&#xd;
        &quot;showWallAngles&quot;: false,&#xd;
        &quot;showOnlySmallWallAngles&quot;: false,&#xd;
        &quot;showGrid&quot;: true,&#xd;
        &quot;gridSnap&quot;: false,&#xd;
        &quot;showRoomName&quot;: false,&#xd;
        &quot;isGuidedDragging&quot;: true&#xd;
      }&#xd;
    },&#xd;
    &quot;name&quot;: &quot;Floor 1&quot;,&#xd;
    &quot;className&quot;: &quot;GraphLinksModel&quot;,&#xd;
    &quot;id&quot;: &quot;${floorid1}&quot;,&#xd;
    &quot;floorRooms&quot;: [&#xd;
      {&#xd;
        &quot;area&quot;: 58291,&#xd;
        &quot;roomType&quot;: &quot;Livingroom&quot;,&#xd;
        &quot;loc&quot;: {&#xd;
          &quot;class&quot;: &quot;go.Point&quot;,&#xd;
          &quot;x&quot;: -243.05208333333331,&#xd;
          &quot;y&quot;: -198.95833333333331&#xd;
        },&#xd;
        &quot;breadth&quot;: 100,&#xd;
        &quot;length&quot;: 100,&#xd;
        &quot;category&quot;: &quot;RoomNode&quot;,&#xd;
        &quot;isSuggested&quot;: 0,&#xd;
        &quot;suggestedRoomType&quot;: &quot;null&quot;,&#xd;
        &quot;fill&quot;: &quot;#FFFFFF&quot;,&#xd;
        &quot;key&quot;: &quot;Room&quot;,&#xd;
        &quot;walls&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall3&quot;,&#xd;
            &quot;caption&quot;: &quot;wall M&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 5473.333333333332,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.041666666666,&#xd;
              &quot;y&quot;: -4029.166666666666&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2916666666663,&#xd;
              &quot;y&quot;: -4029.166666666666&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.041666666666,&#xd;
              &quot;y&quot;: -3979.166666666666&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.041666666666,&#xd;
              &quot;y&quot;: -4079.166666666666&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2916666666663,&#xd;
              &quot;y&quot;: -3979.166666666666&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2916666666663,&#xd;
              &quot;y&quot;: -4079.166666666666&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;-9e9999&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;9e9999&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall2&quot;,&#xd;
            &quot;caption&quot;: &quot;wall L&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 4260,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.041666666666,&#xd;
              &quot;y&quot;: 330.833333333334&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.041666666666,&#xd;
              &quot;y&quot;: -4029.166666666666&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.041666666666,&#xd;
              &quot;y&quot;: 280.833333333334&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.041666666666,&#xd;
              &quot;y&quot;: 380.833333333334&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.041666666666,&#xd;
              &quot;y&quot;: -3979.166666666666&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.041666666666,&#xd;
              &quot;y&quot;: -4079.166666666666&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;-9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall&quot;,&#xd;
            &quot;caption&quot;: &quot;wall K&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 5473.333333333332,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2916666666663,&#xd;
              &quot;y&quot;: 330.8333333333334&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.041666666666,&#xd;
              &quot;y&quot;: 330.833333333334&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2916666666663,&#xd;
              &quot;y&quot;: 280.8333333333337&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2916666666663,&#xd;
              &quot;y&quot;: 380.8333333333334&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.041666666666,&#xd;
              &quot;y&quot;: 280.833333333334&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.041666666666,&#xd;
              &quot;y&quot;: 380.833333333334&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;-9e9999&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;9e9999&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall4&quot;,&#xd;
            &quot;caption&quot;: &quot;wall N&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 4260,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2916666666663,&#xd;
              &quot;y&quot;: -4029.166666666666&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2916666666663,&#xd;
              &quot;y&quot;: 330.8333333333334&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2916666666663,&#xd;
              &quot;y&quot;: -3979.166666666666&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2916666666663,&#xd;
              &quot;y&quot;: -4079.166666666666&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2916666666663,&#xd;
              &quot;y&quot;: 280.8333333333337&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2916666666663,&#xd;
              &quot;y&quot;: 380.8333333333334&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;-9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            }&#xd;
          }&#xd;
        ],&#xd;
        &quot;boundaryWalls&quot;: [&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall3&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall2&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall4&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;assets&quot;: [],&#xd;
        &quot;name&quot;: &quot;Living&quot;,&#xd;
        &quot;isSelected&quot;: true,&#xd;
        &quot;fixture&quot;: {&#xd;
          &quot;roomFixtures&quot;: [],&#xd;
          &quot;wallParts&quot;: [&#xd;
            {&#xd;
              &quot;doors&quot;: [],&#xd;
              &quot;windows&quot;: []&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        &quot;roomShape&quot;: &quot;Rect&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;canvasRotationAngle&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">roomid1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.floorRooms[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Crockery Unit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;zoneID&quot;:&quot;8005e9a9-e750-48b2-bbdb-38e41ba6a69f&quot;,&quot;unitEntryType&quot;:&quot;FITTED_FURNITURE&quot;,&quot;isGola&quot;:false,&quot;position&quot;:{&quot;x&quot;:-1354.375,&quot;y&quot;:0,&quot;z&quot;:-4235.833333333334},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid1}/rooms/${roomid1}/unitEntries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">object1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.objectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add sofa" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;unitEntryType&quot;:&quot;LOOSE_FURNITURE&quot;,&quot;productId&quot;:2,&quot;hlSkuId&quot;:&quot;FUR-0000-000001-076&quot;,&quot;skuId&quot;:191,&quot;categoryId&quot;:2,&quot;width&quot;:924,&quot;height&quot;:873,&quot;length&quot;:846,&quot;subCategoryId&quot;:2,&quot;position&quot;:{&quot;x&quot;:-1354.375,&quot;y&quot;:0,&quot;z&quot;:-4235.833333333334},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0},&quot;isGola&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid1}/rooms/${roomid1}/unitEntries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">object2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.objectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transform sofa" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;position&quot;:{&quot;x&quot;:150.2916999999998,&quot;z&quot;:-3556.1667000000007},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1,&quot;z&quot;:1},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid1}/rooms/${roomid1}/unitEntries/${object2}/transform</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transform crockery" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;position&quot;:{&quot;x&quot;:-288.2082999999999,&quot;z&quot;:34.83334000000049},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1,&quot;z&quot;:1},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid1}/rooms/${roomid1}/unitEntries/${object1}/transform</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Floors" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;floor&quot;: {&#xd;
    &quot;modelData&quot;: {&#xd;
      &quot;units&quot;: &quot;feet&quot;,&#xd;
      &quot;unitsAbbreviation&quot;: &quot;ft&quot;,&#xd;
      &quot;unitsConversionFactor&quot;: &quot;0.0656168&quot;,&#xd;
      &quot;gridSize&quot;: &quot;15.239999512320015&quot;,&#xd;
      &quot;wallThickness&quot;: &quot;5&quot;,&#xd;
      &quot;preferences&quot;: {&#xd;
        &quot;showWallGuidelines&quot;: true,&#xd;
        &quot;showWallLengths&quot;: true,&#xd;
        &quot;showWallAngles&quot;: false,&#xd;
        &quot;showOnlySmallWallAngles&quot;: false,&#xd;
        &quot;showGrid&quot;: true,&#xd;
        &quot;gridSnap&quot;: false,&#xd;
        &quot;showRoomName&quot;: false,&#xd;
        &quot;isGuidedDragging&quot;: true&#xd;
      }&#xd;
    },&#xd;
    &quot;name&quot;: &quot;Floor 1&quot;,&#xd;
    &quot;className&quot;: &quot;GraphLinksModel&quot;,&#xd;
    &quot;id&quot;: &quot;ba6f5362-9082-484d-bb99-315d4b37659d&quot;,&#xd;
    &quot;floorRooms&quot;: [&#xd;
      {&#xd;
        &quot;area&quot;: 58290.99912733333,&#xd;
        &quot;roomType&quot;: &quot;Livingroom&quot;,&#xd;
        &quot;loc&quot;: {&#xd;
          &quot;class&quot;: &quot;go.Point&quot;,&#xd;
          &quot;x&quot;: -243.052075,&#xd;
          &quot;y&quot;: -198.958335&#xd;
        },&#xd;
        &quot;breadth&quot;: 273.66666,&#xd;
        &quot;length&quot;: 213.000002,&#xd;
        &quot;category&quot;: &quot;RoomNode&quot;,&#xd;
        &quot;id&quot;: &quot;0d25b279-42e8-462b-80e5-9143a66727fe&quot;,&#xd;
        &quot;isSuggested&quot;: 0,&#xd;
        &quot;suggestedRoomType&quot;: &quot;null&quot;,&#xd;
        &quot;fill&quot;: &quot;#FFFFFF&quot;,&#xd;
        &quot;key&quot;: &quot;Room&quot;,&#xd;
        &quot;walls&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall3&quot;,&#xd;
            &quot;caption&quot;: &quot;wall M&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;length&quot;: 5473.333199999999,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;wallDecor&quot;: null,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.0415,&#xd;
              &quot;y&quot;: -4029.1667&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2917,&#xd;
              &quot;y&quot;: -4029.1667&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.0415,&#xd;
              &quot;y&quot;: -3979.1667&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.0415,&#xd;
              &quot;y&quot;: -4079.1667&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2917,&#xd;
              &quot;y&quot;: -3979.1667&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2917,&#xd;
              &quot;y&quot;: -4079.1667&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;-9e9999&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;9e9999&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall2&quot;,&#xd;
            &quot;caption&quot;: &quot;wall L&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;length&quot;: 4260.00004,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;wallDecor&quot;: null,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.0415,&#xd;
              &quot;y&quot;: 330.83334&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.0415,&#xd;
              &quot;y&quot;: -4029.1667&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.0415,&#xd;
              &quot;y&quot;: 280.83334&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.0415,&#xd;
              &quot;y&quot;: 380.83334&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.0415,&#xd;
              &quot;y&quot;: -3979.1667&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.0415,&#xd;
              &quot;y&quot;: -4079.1667&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;-9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall&quot;,&#xd;
            &quot;caption&quot;: &quot;wall K&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;length&quot;: 5473.333199999999,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;wallDecor&quot;: null,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2917,&#xd;
              &quot;y&quot;: 330.83334&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4911.0415,&#xd;
              &quot;y&quot;: 330.83334&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2917,&#xd;
              &quot;y&quot;: 280.83334&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2917,&#xd;
              &quot;y&quot;: 380.83334&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4861.0415,&#xd;
              &quot;y&quot;: 280.83334&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -4961.0415,&#xd;
              &quot;y&quot;: 380.83334&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;-9e9999&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;9e9999&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall4&quot;,&#xd;
            &quot;caption&quot;: &quot;wall N&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;length&quot;: 4260.00004,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;wallDecor&quot;: null,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2917,&#xd;
              &quot;y&quot;: -4029.1667&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 662.2917,&#xd;
              &quot;y&quot;: 330.83334&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2917,&#xd;
              &quot;y&quot;: -3979.1667&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2917,&#xd;
              &quot;y&quot;: -4079.1667&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 612.2917,&#xd;
              &quot;y&quot;: 280.83334&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: 712.2917,&#xd;
              &quot;y&quot;: 380.83334&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;-9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            }&#xd;
          }&#xd;
        ],&#xd;
        &quot;boundaryWalls&quot;: [&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall3&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall2&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall4&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;assets&quot;: [&#xd;
          {&#xd;
            &quot;marker&quot;: {&#xd;
              &quot;markerColor&quot;: &quot;#379577&quot;,&#xd;
              &quot;markerBottom&quot;: &quot;1500 (w)&quot;,&#xd;
              &quot;markerTop&quot;: &quot;Crockery&quot;&#xd;
            },&#xd;
            &quot;objectId&quot;: &quot;09c28243-7522-4ccd-813a-3fbd4ef6a506&quot;,&#xd;
            &quot;category&quot;: &quot;Asset&quot;,&#xd;
            &quot;height&quot;: 483,&#xd;
            &quot;key&quot;: &quot;09c28243-7522-4ccd-813a-3fbd4ef6a506&quot;,&#xd;
            &quot;length&quot;: 483,&#xd;
            &quot;url&quot;: &quot;https://spacecraft-release.s3-ap-southeast-1.amazonaws.com/floorplanner/Marker.jpg&quot;,&#xd;
            &quot;width&quot;: 1500,&#xd;
            &quot;modelAvailable&quot;: true,&#xd;
            &quot;location&quot;: &quot;-288.2083 34.83334&quot;,&#xd;
            &quot;rotationAngle&quot;: &quot;0&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;marker&quot;: {&#xd;
              &quot;markerColor&quot;: &quot;#DD902C&quot;,&#xd;
              &quot;markerBottom&quot;: &quot;920 (w)&quot;,&#xd;
              &quot;markerTop&quot;: &quot;Boulevardier&quot;&#xd;
            },&#xd;
            &quot;objectId&quot;: &quot;c47628bd-171b-42f2-9b77-0c390f9b9300&quot;,&#xd;
            &quot;category&quot;: &quot;Asset&quot;,&#xd;
            &quot;height&quot;: 846,&#xd;
            &quot;key&quot;: &quot;c47628bd-171b-42f2-9b77-0c390f9b9300&quot;,&#xd;
            &quot;length&quot;: 846,&#xd;
            &quot;url&quot;: &quot;https://spacecraft-release.s3-ap-southeast-1.amazonaws.com/floorplanner/Marker.jpg&quot;,&#xd;
            &quot;width&quot;: 924,&#xd;
            &quot;modelAvailable&quot;: true,&#xd;
            &quot;location&quot;: &quot;150.2917 -3556.1666999999998&quot;,&#xd;
            &quot;rotationAngle&quot;: &quot;0&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;name&quot;: &quot;Living&quot;,&#xd;
        &quot;isSelected&quot;: true,&#xd;
        &quot;fixture&quot;: {&#xd;
          &quot;roomFixtures&quot;: [&#xd;
            {&#xd;
              &quot;marker&quot;: {&#xd;
                &quot;markerColor&quot;: &quot;#379577&quot;,&#xd;
                &quot;markerBottom&quot;: &quot;1500 (w)&quot;,&#xd;
                &quot;markerTop&quot;: &quot;Crockery&quot;&#xd;
              },&#xd;
              &quot;objectId&quot;: &quot;09c28243-7522-4ccd-813a-3fbd4ef6a506&quot;,&#xd;
              &quot;category&quot;: &quot;Asset&quot;,&#xd;
              &quot;height&quot;: 483,&#xd;
              &quot;key&quot;: &quot;09c28243-7522-4ccd-813a-3fbd4ef6a506&quot;,&#xd;
              &quot;length&quot;: 483,&#xd;
              &quot;url&quot;: &quot;https://spacecraft-release.s3-ap-southeast-1.amazonaws.com/floorplanner/Marker.jpg&quot;,&#xd;
              &quot;width&quot;: 1500,&#xd;
              &quot;modelAvailable&quot;: true,&#xd;
              &quot;location&quot;: &quot;-288.2083 34.83334&quot;,&#xd;
              &quot;rotationAngle&quot;: &quot;0&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;marker&quot;: {&#xd;
                &quot;markerColor&quot;: &quot;#DD902C&quot;,&#xd;
                &quot;markerBottom&quot;: &quot;920 (w)&quot;,&#xd;
                &quot;markerTop&quot;: &quot;Boulevardier&quot;&#xd;
              },&#xd;
              &quot;objectId&quot;: &quot;c47628bd-171b-42f2-9b77-0c390f9b9300&quot;,&#xd;
              &quot;category&quot;: &quot;Asset&quot;,&#xd;
              &quot;height&quot;: 846,&#xd;
              &quot;key&quot;: &quot;c47628bd-171b-42f2-9b77-0c390f9b9300&quot;,&#xd;
              &quot;length&quot;: 846,&#xd;
              &quot;url&quot;: &quot;https://spacecraft-release.s3-ap-southeast-1.amazonaws.com/floorplanner/Marker.jpg&quot;,&#xd;
              &quot;width&quot;: 924,&#xd;
              &quot;modelAvailable&quot;: true,&#xd;
              &quot;location&quot;: &quot;150.2917 -3556.1666999999998&quot;,&#xd;
              &quot;rotationAngle&quot;: &quot;0&quot;&#xd;
            }&#xd;
          ],&#xd;
          &quot;wallParts&quot;: [&#xd;
            {&#xd;
              &quot;doors&quot;: [],&#xd;
              &quot;windows&quot;: []&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        &quot;roomShape&quot;: &quot;Rect&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;canvasRotationAngle&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/3b45b923-e938-4c05-bfb6-23fa56e84553/floors</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiUk9MRV9ERVNJR05FUiIsInByb2plY3QiOiIzYjQ1YjkyMy1lOTM4LTRjMDUtYmZiNi0yM2ZhNTZlODQ1NTMiLCJlbWFpbCI6InlvZ2kuZHBAaG9tZWxhbmUuY29tIiwib3BlbiI6ZmFsc2UsInN1YiI6InlvZ2kuZHBAaG9tZWxhbmUuY29tIiwiaWF0IjoxNTc3OTQ0NDYzLCJleHAiOjE1NzgwMzA4NjN9.5Q80d5bsTB5N7Mon_ymrrTW6G5Cuo0Far0S4K1PrbT0XmHKvWi64Y5RrgzSIyrO5O3ZMVpXVwk2BuJi8sNGa_Q</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Floor 2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;modelData&quot;:{&quot;units&quot;:&quot;feet&quot;,&quot;unitsAbbreviation&quot;:&quot;ft&quot;,&quot;unitsConversionFactor&quot;:0.0656168,&quot;gridSize&quot;:15.239999512320015,&quot;wallThickness&quot;:5,&quot;preferences&quot;:{&quot;showWallGuidelines&quot;:true,&quot;showWallLengths&quot;:true,&quot;showWallAngles&quot;:false,&quot;showOnlySmallWallAngles&quot;:false,&quot;showGrid&quot;:true,&quot;gridSnap&quot;:false,&quot;showRoomName&quot;:false,&quot;isGuidedDragging&quot;:true}},&quot;name&quot;:&quot;Floor 2&quot;,&quot;canvasRotationAngle&quot;:0,&quot;className&quot;:&quot;GraphLinksModel&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">floorid2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Kitchen" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;floor&quot;: {&#xd;
    &quot;modelData&quot;: {&#xd;
      &quot;units&quot;: &quot;feet&quot;,&#xd;
      &quot;unitsAbbreviation&quot;: &quot;ft&quot;,&#xd;
      &quot;unitsConversionFactor&quot;: &quot;0.0656168&quot;,&#xd;
      &quot;gridSize&quot;: &quot;15.239999512320015&quot;,&#xd;
      &quot;wallThickness&quot;: &quot;5&quot;,&#xd;
      &quot;preferences&quot;: {&#xd;
        &quot;showWallGuidelines&quot;: true,&#xd;
        &quot;showWallLengths&quot;: true,&#xd;
        &quot;showWallAngles&quot;: false,&#xd;
        &quot;showOnlySmallWallAngles&quot;: false,&#xd;
        &quot;showGrid&quot;: true,&#xd;
        &quot;gridSnap&quot;: false,&#xd;
        &quot;showRoomName&quot;: false,&#xd;
        &quot;isGuidedDragging&quot;: true&#xd;
      }&#xd;
    },&#xd;
    &quot;name&quot;: &quot;Floor 2&quot;,&#xd;
    &quot;className&quot;: &quot;GraphLinksModel&quot;,&#xd;
    &quot;id&quot;: &quot;${floorid2}&quot;,&#xd;
    &quot;floorRooms&quot;: [&#xd;
      {&#xd;
        &quot;area&quot;: 40086.33333333333,&#xd;
        &quot;roomType&quot;: &quot;Kitchen&quot;,&#xd;
        &quot;loc&quot;: {&#xd;
          &quot;class&quot;: &quot;go.Point&quot;,&#xd;
          &quot;x&quot;: -409.55208333333337,&#xd;
          &quot;y&quot;: -302.29166666666663&#xd;
        },&#xd;
        &quot;breadth&quot;: 100,&#xd;
        &quot;length&quot;: 100,&#xd;
        &quot;category&quot;: &quot;RoomNode&quot;,&#xd;
        &quot;isSuggested&quot;: 0,&#xd;
        &quot;suggestedRoomType&quot;: &quot;null&quot;,&#xd;
        &quot;fill&quot;: &quot;#FFFFFF&quot;,&#xd;
        &quot;key&quot;: &quot;Room&quot;,&#xd;
        &quot;walls&quot;: [&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall3&quot;,&#xd;
            &quot;caption&quot;: &quot;wall C&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 4819.999999999999,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8241.041666666668,&#xd;
              &quot;y&quot;: -6095.833333333332&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3321.041666666669,&#xd;
              &quot;y&quot;: -6095.833333333332&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8191.041666666668,&#xd;
              &quot;y&quot;: -6045.833333333332&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8291.041666666668,&#xd;
              &quot;y&quot;: -6145.833333333332&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3371.041666666669,&#xd;
              &quot;y&quot;: -6045.833333333332&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3271.041666666669,&#xd;
              &quot;y&quot;: -6145.833333333332&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;-9e9999&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;9e9999&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall2&quot;,&#xd;
            &quot;caption&quot;: &quot;wall B&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 3326.666666666666,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8241.041666666668,&#xd;
              &quot;y&quot;: -2669.166666666666&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8241.041666666668,&#xd;
              &quot;y&quot;: -6095.833333333332&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8191.041666666668,&#xd;
              &quot;y&quot;: -2719.166666666666&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8291.041666666668,&#xd;
              &quot;y&quot;: -2619.166666666666&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8191.041666666668,&#xd;
              &quot;y&quot;: -6045.833333333332&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8291.041666666668,&#xd;
              &quot;y&quot;: -6145.833333333332&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;-9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall&quot;,&#xd;
            &quot;caption&quot;: &quot;wall A&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 4819.999999999999,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3321.041666666669,&#xd;
              &quot;y&quot;: -2669.166666666666&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8241.041666666668,&#xd;
              &quot;y&quot;: -2669.166666666666&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3371.041666666669,&#xd;
              &quot;y&quot;: -2719.166666666666&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3271.041666666669,&#xd;
              &quot;y&quot;: -2619.166666666666&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8191.041666666668,&#xd;
              &quot;y&quot;: -2719.166666666666&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -8291.041666666668,&#xd;
              &quot;y&quot;: -2619.166666666666&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;-9e9999&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;NaN&quot;,&#xd;
              &quot;y&quot;: &quot;9e9999&quot;&#xd;
            }&#xd;
          },&#xd;
          {&#xd;
            &quot;key&quot;: &quot;wall4&quot;,&#xd;
            &quot;caption&quot;: &quot;wall D&quot;,&#xd;
            &quot;category&quot;: &quot;WallGroup&quot;,&#xd;
            &quot;url&quot;: null,&#xd;
            &quot;color&quot;: &quot;#979797&quot;,&#xd;
            &quot;length&quot;: 3326.666666666666,&#xd;
            &quot;height&quot;: 3000,&#xd;
            &quot;width&quot;: null,&#xd;
            &quot;thickness&quot;: 5,&#xd;
            &quot;isGroup&quot;: true,&#xd;
            &quot;startPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3321.041666666669,&#xd;
              &quot;y&quot;: -6095.833333333332&#xd;
            },&#xd;
            &quot;endPoint&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3321.041666666669,&#xd;
              &quot;y&quot;: -2669.166666666666&#xd;
            },&#xd;
            &quot;smpt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3371.041666666669,&#xd;
              &quot;y&quot;: -6045.833333333332&#xd;
            },&#xd;
            &quot;smpt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3271.041666666669,&#xd;
              &quot;y&quot;: -6145.833333333332&#xd;
            },&#xd;
            &quot;empt1&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3371.041666666669,&#xd;
              &quot;y&quot;: -2719.166666666666&#xd;
            },&#xd;
            &quot;empt2&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: -3271.041666666669,&#xd;
              &quot;y&quot;: -2619.166666666666&#xd;
            },&#xd;
            &quot;minLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;-9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            },&#xd;
            &quot;maxLocation&quot;: {&#xd;
              &quot;className&quot;: &quot;go.Point&quot;,&#xd;
              &quot;x&quot;: &quot;9e9999&quot;,&#xd;
              &quot;y&quot;: &quot;NaN&quot;&#xd;
            }&#xd;
          }&#xd;
        ],&#xd;
        &quot;boundaryWalls&quot;: [&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall3&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall2&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;direction&quot;: 1,&#xd;
            &quot;key&quot;: &quot;wall4&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;assets&quot;: [],&#xd;
        &quot;name&quot;: &quot;Kitchen&quot;,&#xd;
        &quot;isSelected&quot;: true,&#xd;
        &quot;fixture&quot;: {&#xd;
          &quot;roomFixtures&quot;: [],&#xd;
          &quot;wallParts&quot;: [&#xd;
            {&#xd;
              &quot;doors&quot;: [],&#xd;
              &quot;windows&quot;: []&#xd;
            }&#xd;
          ]&#xd;
        },&#xd;
        &quot;roomShape&quot;: &quot;Rect&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;canvasRotationAngle&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">roomid2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.floorRooms[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Blind Corner unit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;zoneID&quot;:&quot;aec99d31-dc77-4952-89c5-0a7ebca6139f&quot;,&quot;unitEntryType&quot;:&quot;FITTED_FURNITURE&quot;,&quot;isGola&quot;:false,&quot;position&quot;:{&quot;x&quot;:-6351.041749999999,&quot;y&quot;:0,&quot;z&quot;:-2035.8333300000002},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">object3</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.objectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Cooking unit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;zoneID&quot;:&quot;5f1ab714-fe23-492b-8ac7-973025b0c673&quot;,&quot;unitEntryType&quot;:&quot;FITTED_FURNITURE&quot;,&quot;isGola&quot;:false,&quot;position&quot;:{&quot;x&quot;:-6351.041749999999,&quot;y&quot;:0,&quot;z&quot;:-2035.8333300000002},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">object4</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.objectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Preparation unit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;zoneID&quot;:&quot;163f8231-d00e-4aa2-b97c-634dcfd573b2&quot;,&quot;unitEntryType&quot;:&quot;FITTED_FURNITURE&quot;,&quot;isGola&quot;:false,&quot;position&quot;:{&quot;x&quot;:-6351.041749999999,&quot;y&quot;:0,&quot;z&quot;:-2035.8333300000002},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">object5</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.objectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Utensil unit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;zoneID&quot;:&quot;9f6f5f0e-8787-4b2c-b59d-d690216c1906&quot;,&quot;unitEntryType&quot;:&quot;FITTED_FURNITURE&quot;,&quot;isGola&quot;:false,&quot;position&quot;:{&quot;x&quot;:-6351.041749999999,&quot;y&quot;:0,&quot;z&quot;:-2035.8333300000002},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">object6</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.objectId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transform utensil" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;position&quot;:{&quot;x&quot;:-3967.7081666666663,&quot;z&quot;:-5729.166666666668},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1,&quot;z&quot;:1},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries/${object6}/transform</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transform preparation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;position&quot;:{&quot;x&quot;:-5142.708166666665,&quot;z&quot;:-5420.833333333334},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1,&quot;z&quot;:1},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries/${object5}/transform</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transform cooking" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;position&quot;:{&quot;x&quot;:-6467.708166666665,&quot;z&quot;:-5728.666666666668},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1,&quot;z&quot;:1},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries/${object4}/transform</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transform blind corner" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;position&quot;:{&quot;x&quot;:-7616.041666666668,&quot;z&quot;:-4715.833333333333},&quot;scale&quot;:{&quot;x&quot;:1,&quot;y&quot;:1,&quot;z&quot;:1},&quot;rotation&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries/${object3}/transform</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Floors" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get FloorPlan Image" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid1}/fpImage</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Upload 2D file" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;file&quot;: &quot;string&quot;,&#xd;
  &quot;floorId&quot;: &quot;${floorid}&quot;,&#xd;
  &quot;imageName&quot;: &quot;Floor Planner&quot;,&#xd;
  &quot;projectId&quot;: &quot;${id}&quot;,&#xd;
  &quot;roomId&quot;: &quot;${roomid}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/upload2dFile</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pricing Error Check" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/miq/getPricingError/${id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Migration Check_ Living" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid1}/rooms/${roomid1}/migration</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Migration Check_ Kitchen" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/migration</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Customer Data" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev-roster.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sf_customer/get_customer_data?cemail=jmetertest@mailinator.com</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Edit Zone" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries/${object4}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Material Apply" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&quot;objectId&quot;:&quot;6add169a-80a0-4a33-95e8-2d6510944631&quot;,&quot;moduleId&quot;:&quot;04a00619-98ac-4094-9f4a-0ee74d69f2de&quot;,&quot;modelId&quot;:&quot;3899ca64-a880-4853-b6e7-3397ff53a335&quot;,&quot;miqModuleId&quot;:&quot;854&quot;,&quot;uid&quot;:&quot;6add169a-80a0-4a33-95e8-2d6510944631&quot;,&quot;partType&quot;:&quot;LOFT&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;560 X 70 X 750&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;32da5698-bc6c-4806-bef6-d5d951756442&quot;,&quot;moduleId&quot;:&quot;1ec27a2c-9b06-41ed-8342-db45b9d61198&quot;,&quot;modelId&quot;:&quot;05aecb36-88e9-45e1-96e1-a5efa9868d93&quot;,&quot;miqModuleId&quot;:&quot;540&quot;,&quot;uid&quot;:&quot;32da5698-bc6c-4806-bef6-d5d951756442&quot;,&quot;partType&quot;:&quot;LOFT&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:null,&quot;carcassCode&quot;:null,&quot;carcassSwatch&quot;:null,&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;1500 X 0 X 560&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;fbedb783-ac35-4e1d-b8ba-fa9d43b2e131&quot;,&quot;moduleId&quot;:&quot;4206eb1f-e5fc-47b4-9a5d-f25d8a10e1c2&quot;,&quot;modelId&quot;:&quot;60daa938-44b3-409b-a53d-a92fe63e0e31&quot;,&quot;miqModuleId&quot;:&quot;373&quot;,&quot;uid&quot;:&quot;fbedb783-ac35-4e1d-b8ba-fa9d43b2e131&quot;,&quot;partType&quot;:&quot;BASE&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;300 X 560 X 700&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[{&quot;code&quot;:&quot;471&quot;,&quot;qty&quot;:1}],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;cb355430-78b5-4469-b655-9cb13f606eaf&quot;,&quot;moduleId&quot;:&quot;5547784b-e966-4cb5-8c6a-8f25bde0fcc6&quot;,&quot;modelId&quot;:&quot;196648dc-0090-4f7a-b2b9-00cff2a2a41a&quot;,&quot;miqModuleId&quot;:&quot;788&quot;,&quot;uid&quot;:&quot;cb355430-78b5-4469-b655-9cb13f606eaf&quot;,&quot;partType&quot;:&quot;LOFT&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;500 X 70 X 750&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;02dc8b6e-3f58-4c69-9136-cbf1869104ec&quot;,&quot;moduleId&quot;:&quot;631fdddc-38c7-426e-9f55-bb03dee42c96&quot;,&quot;modelId&quot;:&quot;196648dc-0090-4f7a-b2b9-00cff2a2a41a&quot;,&quot;miqModuleId&quot;:&quot;788&quot;,&quot;uid&quot;:&quot;02dc8b6e-3f58-4c69-9136-cbf1869104ec&quot;,&quot;partType&quot;:&quot;LOFT&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;500 X 70 X 750&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;8b7674fe-6465-4b3d-a8ec-3ff1a8542e60&quot;,&quot;moduleId&quot;:&quot;7c4588de-bc01-4ea8-a159-b036f2c180b8&quot;,&quot;modelId&quot;:&quot;361f4953-3974-467a-aa95-c98aed7d438e&quot;,&quot;miqModuleId&quot;:&quot;335&quot;,&quot;uid&quot;:&quot;8b7674fe-6465-4b3d-a8ec-3ff1a8542e60&quot;,&quot;partType&quot;:&quot;BASE&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;900 X 560 X 700&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[{&quot;code&quot;:&quot;366&quot;,&quot;qty&quot;:1}],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;dacd5478-bfb6-45b7-b109-35fe75162e7e&quot;,&quot;moduleId&quot;:&quot;84e462ee-7df4-4af1-937b-e1c7838fe1c3&quot;,&quot;modelId&quot;:&quot;e38e6eb3-6a9e-49c3-b492-f88ddd0c4bf5&quot;,&quot;miqModuleId&quot;:&quot;326&quot;,&quot;uid&quot;:&quot;dacd5478-bfb6-45b7-b109-35fe75162e7e&quot;,&quot;partType&quot;:&quot;BASE&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LP-TX-M-44704 NL RH&quot;,&quot;Name&quot;:&quot;MISTY DREAMS WHITE&quot;,&quot;HlAvaialable&quot;:&quot;&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;44704 Misty Dreams white_x2_y1&quot;,&quot;TileX&quot;:2,&quot;TileY&quot;:1,&quot;IsMirror&quot;:&quot;No&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;300 X 560 X 700&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[{&quot;code&quot;:&quot;366&quot;,&quot;qty&quot;:1}],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;14aebf31-377f-4eba-8bc3-241e7c21f2d8&quot;,&quot;moduleId&quot;:&quot;c38625b1-3df8-44b0-bd59-0f28ec5c8079&quot;,&quot;modelId&quot;:&quot;3899ca64-a880-4853-b6e7-3397ff53a335&quot;,&quot;miqModuleId&quot;:&quot;854&quot;,&quot;uid&quot;:&quot;14aebf31-377f-4eba-8bc3-241e7c21f2d8&quot;,&quot;partType&quot;:&quot;LOFT&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;560 X 70 X 750&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[],&quot;overriddenDuringMigration&quot;:false},{&quot;objectId&quot;:&quot;f5a12146-a36d-4fcb-b69c-70657370e62a&quot;,&quot;moduleId&quot;:&quot;d1036485-4f34-44ad-83c3-628a46e747ff&quot;,&quot;modelId&quot;:&quot;196648dc-0090-4f7a-b2b9-00cff2a2a41a&quot;,&quot;miqModuleId&quot;:&quot;788&quot;,&quot;uid&quot;:&quot;f5a12146-a36d-4fcb-b69c-70657370e62a&quot;,&quot;partType&quot;:&quot;LOFT&quot;,&quot;enabled&quot;:true,&quot;carcassName&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassCode&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterCoreCode&quot;:&quot;389&quot;,&quot;shutterCoreName&quot;:&quot;BWR&quot;,&quot;shutterFinishCode&quot;:&quot;65&quot;,&quot;shutterFinishName&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterColourCode&quot;:&quot;PLPBS-SU-A-U107&quot;,&quot;shutterColourName&quot;:&quot;Frosty white&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;left&quot;:null,&quot;right&quot;:null,&quot;top&quot;:null,&quot;bottom&quot;:null,&quot;dimension&quot;:&quot;500 X 70 X 750&quot;,&quot;wardrobeModuleProperties&quot;:null,&quot;wardrobeMeshCode&quot;:null,&quot;accessories&quot;:[],&quot;overriddenDuringMigration&quot;:false}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/unitEntries/${object4}/modules</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module Shutter Info" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/getModuleShutterInfo/BLR-Aug2019</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Room Settings Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft-web/SET_VIEW&quot;,&quot;result&quot;:&quot;Settings&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Gola Apply" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;bloomStrength&quot;:0.5,&quot;exposure&quot;:0.5,&quot;loftSize&quot;:null,&quot;timeOfDay&quot;:&quot;&quot;,&quot;lights&quot;:[],&quot;wallLights&quot;:[],&quot;cameraPosition&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0},&quot;snappingEnabled&quot;:true,&quot;collisionEnabled&quot;:true,&quot;golaEnabled&quot;:true,&quot;softcloseEnabled&quot;:false,&quot;frameAndShutterEnabled&quot;:false,&quot;loftEnabled&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/setting</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Loft 560 Apply" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;bloomStrength&quot;:0.5,&quot;exposure&quot;:0.5,&quot;loftSize&quot;:&quot;LARGE&quot;,&quot;timeOfDay&quot;:&quot;&quot;,&quot;lights&quot;:[],&quot;wallLights&quot;:[],&quot;cameraPosition&quot;:{&quot;x&quot;:0,&quot;y&quot;:0,&quot;z&quot;:0},&quot;snappingEnabled&quot;:true,&quot;collisionEnabled&quot;:true,&quot;golaEnabled&quot;:true,&quot;softcloseEnabled&quot;:false,&quot;frameAndShutterEnabled&quot;:false,&quot;loftEnabled&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/setting</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Decor Open Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft-web/SET_VIEW&quot;,&quot;result&quot;:&quot;Decor&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Countertop Open Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft-web/OPEN_ACCORDION&quot;,&quot;result&quot;:{&quot;type&quot;:&quot;Decor&quot;,&quot;tile&quot;:&quot;Countertops&quot;}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Select Countertop Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft-web/APPLY_MATERIAL_COUNTERTOP&quot;,&quot;result&quot;:{&quot;name&quot;:&quot;mosaicencore&quot;,&quot;color&quot;:16777215,&quot;roughness&quot;:0.2,&quot;metalness&quot;:0,&quot;diffuseTexture&quot;:{&quot;url&quot;:&quot;https://d2dxas069gvht4.cloudfront.net/assets3d/globaltextures/1_mosaic_encore_512_tile4.jpg&quot;,&quot;repeatX&quot;:8,&quot;repeatY&quot;:8}}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Apply Countertop" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;name&quot;:&quot;mosaicencore&quot;,&quot;color&quot;:16777215,&quot;roughness&quot;:0.2,&quot;metalness&quot;:0,&quot;diffuseTexture&quot;:{&quot;url&quot;:&quot;https://d2dxas069gvht4.cloudfront.net/assets3d/globaltextures/1_mosaic_encore_512_tile4.jpg&quot;,&quot;repeatX&quot;:8,&quot;repeatY&quot;:8}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floor/${floorid2}/room/${roomid2}/counterTop</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">4000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Global Material Data" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;email&quot;:&quot;jmetertest@mailinator.com&quot;,&quot;roomType&quot;:&quot;Kitchen&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/catalogue/materialConfig/getData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Material Family Data" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">stage-iqapi.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/miq/materialFamily</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Global Material Apply" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&quot;productType&quot;:&quot;BASE&quot;,&quot;carcassMaterial&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterFinish&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterMaterial&quot;:&quot;BWR&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;HlAvaialable&quot;:&quot;&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;,&quot;IsMirror&quot;:&quot;&quot;}},{&quot;productType&quot;:&quot;WALL&quot;,&quot;carcassMaterial&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterFinish&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterMaterial&quot;:&quot;BWR&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21004 HGL&quot;,&quot;Name&quot;:&quot;Poppy&quot;,&quot;HlAvaialable&quot;:&quot;&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Poppy&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;,&quot;IsMirror&quot;:&quot;&quot;}},{&quot;productType&quot;:&quot;LOFT&quot;,&quot;carcassMaterial&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterFinish&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterMaterial&quot;:&quot;BWR&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;LS-HG-M-21024 HGL&quot;,&quot;Name&quot;:&quot;Saffron&quot;,&quot;HlAvaialable&quot;:&quot;&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Saffron&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;,&quot;IsMirror&quot;:&quot;&quot;}},{&quot;productType&quot;:&quot;INDEPENDENT_LOFT&quot;,&quot;carcassMaterial&quot;:&quot;Prelam BWR Ply&quot;,&quot;carcassSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Prelam BWR Ply&quot;,&quot;Code&quot;:&quot;LS-SU-Interior White&quot;,&quot;Name&quot;:&quot;LS-SU-Interior White&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;plpb_su_frosty_white&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;},&quot;shutterFinish&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;shutterMaterial&quot;:&quot;BWR&quot;,&quot;shutterSwatch&quot;:{&quot;FinishFamily&quot;:&quot;Laminate High Gloss or Textured&quot;,&quot;Code&quot;:&quot;C1-LS-HG-M-22112 MR+&quot;,&quot;Name&quot;:&quot;Contrast Adriatic blue&quot;,&quot;TextureAvailable&quot;:&quot;Yes&quot;,&quot;TextureFileName&quot;:&quot;Contrast_Adriatic_Blue&quot;,&quot;IsMirror&quot;:&quot;&quot;,&quot;TileX&quot;:&quot;&quot;,&quot;TileY&quot;:&quot;&quot;}}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/${id}/floors/${floorid2}/rooms/${roomid2}/defaultMaterials</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Room Summary Open Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft/SET_RIGHT_VIEW&quot;,&quot;result&quot;:&quot;SUMMARY&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Lving Room Price Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft-web/CHANGE_ACTIVE_ROOM&quot;,&quot;result&quot;:&quot;Livingroom&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Kitchen Room Price Event" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;command&quot;:&quot;ACTION_TRIGGERED&quot;,&quot;data&quot;:{&quot;type&quot;:&quot;spacecraft-web/CHANGE_ACTIVE_ROOM&quot;,&quot;result&quot;:&quot;Kitchen&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/externalEvent/DESIGNER/${id}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Room Price Check" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/report/getItems/${id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get MiQ Room Price Report" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1.0/project/report/getMiqRoomPrice/${id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Quote" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sc-backend-qa.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/v1.0/project/getQuote/${id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${projectToken}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="End Meeting" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;data&quot;:{&quot;Meeting_Start_Time__c&quot;:&quot;&quot;,&quot;Meeting_End_Time__c&quot;:&quot;&quot;,&quot;End_Time_Source__c&quot;:&quot;SpaceCraft&quot;,&quot;showroom_visit&quot;:&quot;&quot;,&quot;scvm_visit_date&quot;:&quot;&quot;},&quot;opp_no&quot;:&quot;3312393&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">dev-roster.homelane.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apis/general/update_meeting_start_end_time</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
